<apex:page standardcontroller="ISP_Promotor_Attendance__c" extensions="ISP_Attendance_Ext" showHeader="false" standardStylesheets="false" id="pg">
<style type="text/css">
  .marginbtn{margin-top:100px;}
body {
   
    
}
#fixedheader {
    width: 100%;
    color: #CCC;
    background: #57A21C;
    padding: 20px 0;
}
#fixedfooter {
    position:fixed;
    bottom:0px;
    left:0px;
    width:100%;
    color:#CCC;
    background:#57A21C;
    padding:8px;
}

#circleimg{
  color: #CCC;
    background: #FFFFFF;
    padding: 5px;
   
}
.cls{clear:both;}
#out p {
    text-align: center;
    font-size: 14px;
    font-weight: bold;
}
#out {
    border: 2px solid #f2f2f2;
    padding: 10px 15px;    margin-bottom: 25px;
}
#out img{width:100%;}

.buttonLink {
    display: block;
    width: 120px;
    height: 25px;
    background: #4E9CAF;
    padding: 2px;
    text-align: center;
    border-radius: 5px;
    color: white;
    font-weight: bold;
}
</style>


<!-- Loading CSS Start -->
<style>
#fountainTextG{
    width:234px;
    margin:auto;
}

.fountainTextG{
    color:rgb(0,0,0);
    font-family:Arial;
    font-size:24px;
    text-decoration:none;
    font-weight:normal;
    font-style:normal;
    float:left;
    animation-name:bounce_fountainTextG;
        -o-animation-name:bounce_fountainTextG;
        -ms-animation-name:bounce_fountainTextG;
        -webkit-animation-name:bounce_fountainTextG;
        -moz-animation-name:bounce_fountainTextG;
    animation-duration:2.09s;
        -o-animation-duration:2.09s;
        -ms-animation-duration:2.09s;
        -webkit-animation-duration:2.09s;
        -moz-animation-duration:2.09s;
    animation-iteration-count:infinite;
        -o-animation-iteration-count:infinite;
        -ms-animation-iteration-count:infinite;
        -webkit-animation-iteration-count:infinite;
        -moz-animation-iteration-count:infinite;
    animation-direction:normal;
        -o-animation-direction:normal;
        -ms-animation-direction:normal;
        -webkit-animation-direction:normal;
        -moz-animation-direction:normal;
    transform:scale(.5);
        -o-transform:scale(.5);
        -ms-transform:scale(.5);
        -webkit-transform:scale(.5);
        -moz-transform:scale(.5);
}#fountainTextG_1{
    animation-delay:0.75s;
        -o-animation-delay:0.75s;
        -ms-animation-delay:0.75s;
        -webkit-animation-delay:0.75s;
        -moz-animation-delay:0.75s;
}
#fountainTextG_2{
    animation-delay:0.9s;
        -o-animation-delay:0.9s;
        -ms-animation-delay:0.9s;
        -webkit-animation-delay:0.9s;
        -moz-animation-delay:0.9s;
}
#fountainTextG_3{
    animation-delay:1.05s;
        -o-animation-delay:1.05s;
        -ms-animation-delay:1.05s;
        -webkit-animation-delay:1.05s;
        -moz-animation-delay:1.05s;
}
#fountainTextG_4{
    animation-delay:1.2s;
        -o-animation-delay:1.2s;
        -ms-animation-delay:1.2s;
        -webkit-animation-delay:1.2s;
        -moz-animation-delay:1.2s;
}
#fountainTextG_5{
    animation-delay:1.35s;
        -o-animation-delay:1.35s;
        -ms-animation-delay:1.35s;
        -webkit-animation-delay:1.35s;
        -moz-animation-delay:1.35s;
}
#fountainTextG_6{
    animation-delay:1.5s;
        -o-animation-delay:1.5s;
        -ms-animation-delay:1.5s;
        -webkit-animation-delay:1.5s;
        -moz-animation-delay:1.5s;
}
#fountainTextG_7{
    animation-delay:1.64s;
        -o-animation-delay:1.64s;
        -ms-animation-delay:1.64s;
        -webkit-animation-delay:1.64s;
        -moz-animation-delay:1.64s;
}




@keyframes bounce_fountainTextG{
    0%{
        transform:scale(1);
        color:rgb(0,0,0);
    }

    100%{
        transform:scale(.5);
        color:rgb(255,255,255);
    }
}

@-o-keyframes bounce_fountainTextG{
    0%{
        -o-transform:scale(1);
        color:rgb(0,0,0);
    }

    100%{
        -o-transform:scale(.5);
        color:rgb(255,255,255);
    }
}

@-ms-keyframes bounce_fountainTextG{
    0%{
        -ms-transform:scale(1);
        color:rgb(0,0,0);
    }

    100%{
        -ms-transform:scale(.5);
        color:rgb(255,255,255);
    }
}

@-webkit-keyframes bounce_fountainTextG{
    0%{
        -webkit-transform:scale(1);
        color:rgb(0,0,0);
    }

    100%{
        -webkit-transform:scale(.5);
        color:rgb(255,255,255);
    }
}

@-moz-keyframes bounce_fountainTextG{
    0%{
        -moz-transform:scale(1);
        color:rgb(0,0,0);
    }

    100%{
        -moz-transform:scale(.5);
        color:rgb(255,255,255);
    }
}
</style>
<!-- Loading CSS End -->

 
 <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<!-- <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script> -->

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB1AsrBL0atGbNY-FofmOygLjOsR_3ckXk&callback=initMap"></script>


 <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"/>
 <apex:includeScript value="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"/>
 <apex:stylesheet value="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"/>
 

 <apex:includeScript value="../../soap/ajax/30.0/connection.js" />
 <script type="text/javascript">
        var __sfdcSessionId = '{!GETSESSIONID()}';
 </script> 

 <script>
 

       

        /*****************************************************************************/
                        /*Displaying Current location Map*/
        /*****************************************************************************/
         var docId;
         var longitude;
         var latitude;
         var currentLocation ;
         $(document).ready(function(){
            var isLogin  = '{!isLogIn}';
            var isLogOut = '{!isLogOut}';
            //alert(isLogin);
            //alert(isLogOut);
            if(isLogin == 'true'){
                $('input[id$=checkin]').show();
                $('input[id$=btnShow]').hide();
               // $('input[id$=imageUploadBlk]').show();
                //$('#btnShow').hide(); 
                
                 //document.getElementById("pg:frm:checkin").style.display = 'block';
            }else{
                $('input[id$=checkin]').hide();
                $('input[id$=btnShow]').show();
                //$('input[id$=imageUploadBlk]').hide();
               // $('#checkin').hide();
               // $('#btnShow').show(); 
            }
         });
         
         
         window.onload=function() {
                   $("#div3").fadeOut(3000);
                   
                    $("#div3").after("<img src='http://netdna.webdesignerdepot.com/uploads/2013/07/metaloader.gif' alt='loading' />").fadeIn();  
                   
            //$document.ready(function(){
            var output = document.getElementById("out");

              //Condition to check whether device support Geolocation service or not.
              if (!navigator.geolocation){
                output.innerHTML = "<p>Geolocation is not supported by your browser</p>";
                return;
              }
            
              //If we get API result 
              function success(position) {
              
                    latitude  = position.coords.latitude;
                    longitude = position.coords.longitude;
                    
                    
                     var latlng = new google.maps.LatLng(latitude,longitude);
            var geocoder = geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[1]) {
                      
                        currentLocation = results[1].formatted_address;
                        document.getElementById("add").innerHTML =currentLocation;
                    }
                }
            });
       
                    
                    if(latitude){
                         
                       //output.innerHTML = '<p>Latitude is ' + latitude + '° <br>Longitude is ' + longitude + '°</p>';
                       var img = new Image();
                       img.src = "https://maps.googleapis.com/maps/api/staticmap?center=" + latitude + "," + longitude + "&zoom=13&size=300x300&maptype=hybrid&sensor=false&markers=color:red%7Clabel:G%7C"+ latitude + "," + longitude;
                       output.appendChild(img);
                    }
              };
             
              //Enabling Mobile locaiton service
              function error() {
                  //alert("Turn on your Location Services");
                  output.innerHTML = "Unable to retrieve your location";
              };
            
              output.innerHTML = "<p>Your Current Location</p>";
              
              //Defined time limit for API call result
              var options = {
                  enableHighAccuracy: true,
                  timeout: 1000,
                  maximumAge: 0
              }
              
              //Geolocation API call
              navigator.geolocation.getCurrentPosition(success, error, options);
               $("#div3").fadeIn(3000);
        }
        
        //});
        
        
        /***********************************************************************************/
         
      //Method to show the message when user logged in the system.
      function checkout(){
      
         $('#dialog').show();
         $('#loginTime').hide();
         
         setTimeout(function() { 
            $('#dialog').fadeOut(); 
         }, 3000);  
     }
     
     
     /*******************************************************************************************/
        
        function createAttedence(){
                 
                     //alert(longitude);
                     //alert(latitude);
                     //alert(currentLocation);
                    Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ISP_Attendance_Ext.createLogin}',
                     docId,longitude,latitude,currentLocation,
                    
                      function(result, event) {
                                if (event.status) {
                                    if (result == null) {
                                        alert('Unexpected Error. Message - insertion failed');
                                    } else if (result.Id) {
$("#Outerdiv").hide( 1000 );
 
                                        // alert('successssss');
                                           $('input[id$=checkin]').hide();
                                           $('input[id$=btnShow]').show();
$("#loading").show(1000);

setTimeout(showOuterDiv,3000);
 
 function showOuterDiv(){
   $("#loading").show(1000);
   $("#Outerdiv").show(1000);
   $("#loading").hide(1000);

 };


                                         //$('div[id$=imageUploadBlk]').hide();
                                    } else {
                                        alert('Unexpected Error');
                                    }
                                }
                      }, {
                          escape: true
                         });
    
         } //end of remote Action      

     
        /* Method : Upload Promotor picture
         * Description : Used to upload the attachment as per the attachment id 
         * param : fileNumber is an Id of the seleted file
         */
function uploadPicture() {

            sforce.connection.sessionId = '{!$Api.Session_ID}';
             if (document.getElementById('file').value == "") {
                        alert('Please take the picture and click on check in');
             } else {
                var input = document.getElementById('file');
                var filesToUpload = input.files;
      
                for (var i = 0, f; f = filesToUpload[i]; i++) {
                    var reader = new FileReader();
                    // alert('inside for');
                    // Keep a reference to the File in the FileReader so it can be accessed in callbacks
                    reader.file = f;
      
                    
                    reader.onerror = function(e) {
                        switch (e.target.error.code) {
                            case e.target.error.NOT_FOUND_ERR:
                                alert('File Not Found!');
                                break;
                            case e.target.error.NOT_READABLE_ERR:
                                alert('File is not readable');
                                break;
                            case e.target.error.ABORT_ERR:
                                break; // noop
                            default:
                                alert('An error occurred reading this file.');
                        };
                    };
    
                    reader.onabort = function(e) {
                        alert('File read cancelled');
                    };
    
                    reader.onload = function(e) {
                        // alert('attachment creation');
                        //var result = sforce.connection.query("Select id from Folder where Name = 'AOS India'");
                        var doc      = new sforce.SObject("Document");
                        doc.Name     = this.file.name;
                        doc.Folderid = '00l40000000qFOvAAM'; //result.getRecords[0].id;
                        doc.Type     = this.file.type;
                       
                         //Converting attachment body for insertion into salesforce 
                         //And these Base64Binary supports even IE browser also.
                        /*****************************************/
                        var binary = "";
                        var bytes = new Uint8Array(e.target.result);
                        var length = bytes.byteLength;
    
                        for (var i = 0; i < length; i++) {
                            binary += String.fromCharCode(bytes[i]);
                        }
    
                        doc.Body = (new sforce.Base64Binary(binary)).toString();
                        /*****************************************/
                        
    
                        sforce.connection.create([doc], {
                        
                                onSuccess: function(result, source) {
                                
                                    if (result[0].getBoolean("success")) {
                                        docId = result[0].id;
                                        createAttedence();
                                        //alert('inside doc'+docId);
                                        console.log("new attachment created with id " + result[0].id);
                                        
                                        //location.reload();
                                        //window.parent.location = window.parent.location.href;
                                        //document.getElementById('loadingimg').style.display = 'none';
                                        //refreshAttachments();
                                        document.getElementById('nwfile').value = null;
                                        
                                    } else {
                                        console.log("failed to create attachment " + result[0]);
                                    }
                                },
                                
                                
                                onFailure: function(error, source) {
                                    console.log("An error has occurred " + error);
                                }
                            
                        });
                    };
    
                    //reader.readAsBinaryString(f);
                    reader.readAsArrayBuffer(f);
                }
           }//end of else
        }
            /*******************************************************/
            
            /***************************Logout Method********************************/
                function logOutAttendance(){
  
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.ISP_Attendance_Ext.UpdateLogout}',
                        longitude,latitude,currentLocation,
                        function(result, event){
                            if(event.status){
                                if(result == null){
                                   alert('Updation failed');
                                }
                                else if(result.Id){
                                     //alert('Loggout successfully');
                                      $('input[id$=checkin]').show();
                                      $('input[id$=btnShow]').hide();
                                }
                            } else {
                                alert('Unexpected Error');
                            }
                        },{
                            escape: true
                          }
                    );
                }
            /************************************************************************/
     
     
 </script>
 <script>
    $(document).ready(function() {
        $('#showmenu').click(function() {
 
 
  $("#Outerdiv").hide( 1000 );            
  $("#loading").show(1000);
setTimeout(showOuterDiv,3000);
 
 function showOuterDiv(){
   $("#loading").show(1000);
   $("#Outerdiv").show(1000);
   $("#loading").hide(1000);

 };
               
               /* $('.menu').slideToggle("fast");
                //$('.hidediv').slideToggle("fast");
                $( "#Outerdiv" ).hide( 1000 );
                $( "#Outerdiv" ).show( 1000 );*/
        });
    });
</script>
 <apex:form id="frm" >

 <!-- Loading div Start -->
<!-- <div id="showmenu">Save</div> -->
<div id="loading" class="menu" style="display: none;">
<div id="fountainTextG">
   <div> <img src='https://d13yacurqjgara.cloudfront.net/users/69182/screenshots/2151363/animated_loading__by__amiri.gif' alt='loading' />
  </div>
   <div id="fountainTextG_1" class="fountainTextG">S</div>
   <div id="fountainTextG_2" class="fountainTextG">a</div>
   <div id="fountainTextG_3" class="fountainTextG">v</div>
   <div id="fountainTextG_4" class="fountainTextG">i</div>
   <div id="fountainTextG_5" class="fountainTextG">n</div>
   <div id="fountainTextG_6" class="fountainTextG">g</div>
</div>
</div>
<!-- Loading div End -->
 
 
 <!--Hiding Div Starts --> 
 <div class="hidediv" id="Outerdiv">
 <!-- Header Start-->
 <div id="fixedheader" class="text-center">
     <img src="http://jdprecisionplumbing.com/wp-content/uploads/2013/10/aosmithlogo.png" alt="aosmith_logo" style="height: 32px;"/>
 </div>
<!-- Header End-->
 
<div class="cls"></div>
 
<!-- Content Start-->
<div class="row" id="circleimg">

    <div class="col-xs-6" id="imageUploadBlk">
    
        <img id="blah" src="http://blog.skilledup.com/wp-content/authors/default.gif" alt="your image" height="100" width="100" class="img-circle" style="margin-left:10px;" />
        <p>
        &nbsp;&nbsp;<a href="" onclick="document.getElementById('file').click(); return false;" class="buttonLink">Take Picture</a>
        <input id="file" type="file" name="file1"  accept="image/*;capture=camera" onComplete="convert();"  style="display:none"/>
        </p>
    </div>
    
    <div class="col-xs-6">
    
        <label>Address:</label><p id ="add"> </p>
        <apex:commandButton styleClass="showmenu" value="Check in"  id="checkin" onclick="uploadPicture();return false;" status="sts" styleclass="btn-success btn-lg col-xs-12 "/>
        <apex:commandButton value="Check out" id="btnShow" onclick="logOutAttendance();return false;"   status="sts" styleclass="btn-danger btn-lg col-xs-12 "/> <!--  oncomplete="checkout();"-->
    
    </div>
    
</div> 
<!-- Content End-->

<!--Map Start -->
<div id="out"> </div>  
<!--Map End -->

<apex:actionstatus startText="Processing....." id="sts"></apex:actionstatus>     
<apex:pageMessages ></apex:pageMessages>
      
      
     
  
<!-- Footer Start-->    
<div id="fixedfooter">Innovation has a name</div>
<!-- Footer End-->     
 <!--Hiding Div End-->
 </div>
 </apex:form>
 
 <script>
    
function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            
            reader.onload = function (e) {
                $('#blah').attr('src', e.target.result);
            }
            
            reader.readAsDataURL(input.files[0]);
            
        }
    }
    
    $("#file").change(function(){
        readURL(this);
        //convert();
                
    });
    $("#blah").load(function() {
    convert();
});
    
    /*
    $("#blah").change(function(){
        //readURL(this);
        convert();
        
    }); 
    */
    var imgs;
    function convert(){
        
        img = new Image();
        img.src = document.getElementById("blah").src;
        var canvas = document.createElement('canvas');
        //canvas.setAttribute("id", "MyTestAb");
        var ctx = canvas.getContext('2d');
        canvas.width =250
        canvas.height =150
        ctx.drawImage(img, 0, 0, 250,150);
        imgs = canvas.toDataURL("image/png");
        document.getElementById('#file').innerHTML = '<img src=\'path/imgs.jpg\'>';
        
        
        
       /* var blob = dataURItoBlob(imgs);
        var fd = new FormData(document.forms[0]);
        formObj = document.forms.namedItem("pg:frm");
        
        console.log(2222222222222);
        console.log(formObj);
        var fd = new FormData(formObj);
        console.log(888888888);
        console.log(fd);*/
        /*
        //fd.append("canvasImage", blob);
        fd.append("file", blob, "hello.png"); 
        
        console.log("Test File");
        //console.log(fil);
        console.log(fd);
        
        */
        //imgs = canvas.toDataURL("image/jpeg", 1.0);
       // document.write('<img src="'+file+'"/>');
       // document.getElementById("imageUploadBlk").appendChild(canvas);
        //var fetchimg = document.getElementById("MyTestAb");
        
       /* var dataurl = imgs ;
        var blob = dataURLtoBlob(dataurl);
        formObj = document.forms.namedItem("pg:frm");
        console.log(2222222222222);
        console.log(formObj);
        var fd = new FormData(formObj);
        console.log(888888888);
        console.log(fd);
        fd.append("file", blob, "hello.png");   */
 
        
};


function dataURItoBlob(dataURI) {
    // convert base64/URLEncoded data component to raw binary data held in a string
    var byteString;
    if (dataURI.split(',')[0].indexOf('base64') >= 0)
        byteString = atob(dataURI.split(',')[1]);
    else
        byteString = unescape(dataURI.split(',')[1]);

    // separate out the mime component
    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];

    // write the bytes of the string to a typed array
    var ia = new Uint8Array(byteString.length);
    for (var i = 0; i < byteString.length; i++) {
        ia[i] = byteString.charCodeAt(i);
    }

    return new Blob([ia], {type:mimeString});
}


 /*       function dataURLtoBlob(dataurl) {
            var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],
            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);
            while(n--){
            u8arr[n] = bstr.charCodeAt(n);
        }
            return new Blob([u8arr], {type:mime});
        }*/
        
        
        
        
    </script>
 
 <br/>
 
     <div id="dialog" style="display:none;color:green;font-size:16px;" class="col-xs-offset-2 col-xs-8 row" >
             Thank you for recording your attendence <br/>
             <!--<apex:outputpanel id="login1">
             <b>Check in :</b> <apex:outputText value="{0,date,M/d/yyyy hh:mm a}" >
                                   <apex:param value="{!loginTime}" />
                               </apex:outputText> <br/>
             </apex:outputpanel>
             <b style="color:red;">Check out :</b> <apex:outputText value="{0,date,M/d/yyyy hh:mm a}">
                              <apex:param value="{!now()}"/>
                        </apex:outputText> <br/>
             -->
     </div>
     <div>
               
     
     </div>  

</apex:page>